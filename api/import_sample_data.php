<?php
/**
 * API nh·∫≠p d·ªØ li·ªáu m·∫´u v√†o database
 * Phi√™n b·∫£n: 3.0 (Complete Edition) - T∆∞∆°ng th√≠ch v·ªõi schema_complete.sql
 */

// Define this file as an API endpoint
define('API_ENDPOINT', true);

// Set content type for API responses
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST');
header('Access-Control-Allow-Headers: Content-Type');

require_once dirname(__DIR__) . '/includes/config.php';

$result = [
    'success' => false,
    'messages' => [],    'data' => [
        'users' => 0,
        'languages' => 0,
        'translations' => 0,
        'categories' => 0,
        'venues' => 0,
        'speakers' => 0,
        'conferences' => 0,
        'conference_speakers' => 0,
        'payment_methods' => 0,
        'media_folders' => 0,
        'scheduled_tasks' => 0,
        'settings' => 0,
        'user_activity_logs' => 0,
        'invoices' => 0,
        'transactions' => 0,
        'error_logs' => 0
    ]
];

try {
    // K·∫øt n·ªëi database
    $dsn = 'mysql:host=' . DB_HOST . ';dbname=' . DB_NAME . ';charset=utf8mb4';
    $options = [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
        PDO::ATTR_EMULATE_PREPARES => false,
    ];
    
    $pdo = new PDO($dsn, DB_USER, DB_PASS, $options);
    $result['messages'][] = 'K·∫øt n·ªëi database th√†nh c√¥ng';

    // Ki·ªÉm tra xem ƒë√£ c√≥ sample data ch∆∞a
    $existingUsers = $pdo->query("SELECT COUNT(*) FROM users")->fetchColumn();
    
    if ($existingUsers > 0) {
        $result['messages'][] = "ƒê√£ c√≥ $existingUsers users trong h·ªá th·ªëng. Ch·ªâ import d·ªØ li·ªáu c√≤n thi·∫øu...";
    }

    $result['messages'][] = 'B·∫Øt ƒë·∫ßu import sample data t·ª´ schema_complete.sql...';

    // 1. Users (n·∫øu ch∆∞a c√≥)
    if ($existingUsers == 0) {
        $result['messages'][] = '1. ƒêang th√™m sample users...';
        
        $hashedPassword = password_hash('password123', PASSWORD_DEFAULT);
        
        $usersSql = "INSERT INTO `users` (`firstName`, `lastName`, `email`, `password`, `role`, `status`, `email_verified`, `language`, `timezone`, `created_at`) VALUES
            ('Admin', 'System', 'admin@confab.local', :password, 'admin', 'active', 1, 'vi', 'Asia/Ho_Chi_Minh', NOW()),
            ('Nguy·ªÖn', 'T·ªï Ch·ª©c', 'organizer@confab.local', :password, 'organizer', 'active', 1, 'vi', 'Asia/Ho_Chi_Minh', NOW()),
            ('Tr·∫ßn', 'Di·ªÖn Gi·∫£', 'speaker@confab.local', :password, 'speaker', 'active', 1, 'vi', 'Asia/Ho_Chi_Minh', NOW()),
            ('L√™', 'Tham D·ª±', 'user@confab.local', :password, 'user', 'active', 1, 'vi', 'Asia/Ho_Chi_Minh', NOW())";
            
        $stmt = $pdo->prepare($usersSql);
        $stmt->execute(['password' => $hashedPassword]);
        
        $result['data']['users'] = $pdo->lastInsertId() ? 4 : 0;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['users']} users (password: password123)";
    } else {
        $result['data']['users'] = $existingUsers;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingUsers} users trong h·ªá th·ªëng";
    }
    
    // 2. Languages
    $result['messages'][] = '2. ƒêang th√™m languages...';
    $existingLanguages = $pdo->query("SELECT COUNT(*) FROM languages")->fetchColumn();
    
    if ($existingLanguages == 0) {
        $languagesSql = "INSERT INTO `languages` (`code`, `name`, `native_name`, `direction`, `flag`, `is_default`, `is_active`, `sort_order`) VALUES
            ('vi', 'Vietnamese', 'Ti·∫øng Vi·ªát', 'ltr', 'üáªüá≥', 1, 1, 1),
            ('en', 'English', 'English', 'ltr', 'üá∫üá∏', 0, 1, 2),
            ('zh', 'Chinese', '‰∏≠Êñá', 'ltr', 'üá®üá≥', 0, 1, 3),
            ('ja', 'Japanese', 'Êó•Êú¨Ë™û', 'ltr', 'üáØüáµ', 0, 1, 4)";
            
        $pdo->exec($languagesSql);
        $result['data']['languages'] = 4;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['languages']} languages";
    } else {
        $result['data']['languages'] = $existingLanguages;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingLanguages} languages trong h·ªá th·ªëng";
    }

    // 3. Translations
    $result['messages'][] = '3. ƒêang th√™m translations...';
    $existingTranslations = $pdo->query("SELECT COUNT(*) FROM translations")->fetchColumn();
    
    if ($existingTranslations == 0) {
        $translationsSql = "INSERT INTO `translations` (`lang_code`, `translation_key`, `translation_value`) VALUES
            ('vi', 'app.name', 'Confab Web Oasis'),
            ('en', 'app.name', 'Confab Web Oasis'),
            ('vi', 'app.description', 'H·ªá th·ªëng qu·∫£n l√Ω h·ªôi ngh·ªã chuy√™n nghi·ªáp'),
            ('en', 'app.description', 'Professional Conference Management System'),
            ('vi', 'menu.home', 'Trang ch·ªß'),
            ('en', 'menu.home', 'Home'),
            ('vi', 'menu.conferences', 'H·ªôi ngh·ªã'),
            ('en', 'menu.conferences', 'Conferences'),
            ('vi', 'menu.speakers', 'Di·ªÖn gi·∫£'),
            ('en', 'menu.speakers', 'Speakers'),
            ('vi', 'button.register', 'ƒêƒÉng k√Ω'),
            ('en', 'button.register', 'Register'),
            ('vi', 'button.login', 'ƒêƒÉng nh·∫≠p'),
            ('en', 'button.login', 'Login'),
            ('vi', 'status.active', 'Ho·∫°t ƒë·ªông'),
            ('en', 'status.active', 'Active')";
            
        $pdo->exec($translationsSql);
        $result['data']['translations'] = 16;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['translations']} translations";
    } else {
        $result['data']['translations'] = $existingTranslations;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingTranslations} translations trong h·ªá th·ªëng";
    }

    // 4. Categories
    $result['messages'][] = '4. ƒêang th√™m categories...';
    $existingCategories = $pdo->query("SELECT COUNT(*) FROM categories")->fetchColumn();
    
    if ($existingCategories == 0) {
        $categoriesSql = "INSERT INTO `categories` (`name`, `slug`, `description`, `color`, `icon`, `is_featured`, `status`) VALUES
            ('C√¥ng ngh·ªá th√¥ng tin', 'cong-nghe-thong-tin', 'H·ªôi ngh·ªã v·ªÅ c√¥ng ngh·ªá th√¥ng tin v√† ph·∫ßn m·ªÅm', '#007bff', 'fas fa-laptop-code', 1, 'active'),
            ('Kinh doanh', 'kinh-doanh', 'H·ªôi ngh·ªã v·ªÅ qu·∫£n tr·ªã kinh doanh v√† kh·ªüi nghi·ªáp', '#28a745', 'fas fa-chart-line', 1, 'active'),
            ('Y t·∫ø', 'y-te', 'H·ªôi ngh·ªã y khoa v√† chƒÉm s√≥c s·ª©c kh·ªèe', '#dc3545', 'fas fa-heartbeat', 0, 'active'),
            ('Gi√°o d·ª•c', 'giao-duc', 'H·ªôi ngh·ªã v·ªÅ gi√°o d·ª•c v√† ƒë√†o t·∫°o', '#ffc107', 'fas fa-graduation-cap', 0, 'active'),
            ('Khoa h·ªçc', 'khoa-hoc', 'H·ªôi ngh·ªã khoa h·ªçc v√† nghi√™n c·ª©u', '#6f42c1', 'fas fa-microscope', 0, 'active')";
            
        $pdo->exec($categoriesSql);
        $result['data']['categories'] = 5;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['categories']} categories";
    } else {
        $result['data']['categories'] = $existingCategories;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingCategories} categories trong h·ªá th·ªëng";
    }

    // 5. Venues
    $result['messages'][] = '5. ƒêang th√™m venues...';
    $existingVenues = $pdo->query("SELECT COUNT(*) FROM venues")->fetchColumn();
    
    if ($existingVenues == 0) {
        $venuesSql = "INSERT INTO `venues` (`name`, `slug`, `description`, `address`, `city`, `country`, `capacity`, `contact_name`, `contact_email`, `contact_phone`, `status`) VALUES
            ('Trung t√¢m H·ªôi ngh·ªã Qu·ªëc gia', 'trung-tam-hoi-nghi-quoc-gia', 'Trung t√¢m h·ªôi ngh·ªã l·ªõn nh·∫•t Vi·ªát Nam v·ªõi ƒë·∫ßy ƒë·ªß ti·ªán √≠ch hi·ªán ƒë·∫°i', 'ƒê∆∞·ªùng Th√†nh Th√°i, Qu·∫≠n 10, TP.HCM', 'H·ªì Ch√≠ Minh', 'Vietnam', 2000, 'Nguy·ªÖn VƒÉn A', 'venue1@confab.local', '028-1234-5678', 'active'),
            ('Kh√°ch s·∫°n Rex', 'khach-san-rex', 'Kh√°ch s·∫°n 5 sao v·ªõi ph√≤ng h·ªôi ngh·ªã sang tr·ªçng', '141 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM', 'H·ªì Ch√≠ Minh', 'Vietnam', 500, 'Tr·∫ßn Th·ªã B', 'venue2@confab.local', '028-8765-4321', 'active'),
            ('ƒê·∫°i h·ªçc B√°ch Khoa', 'dai-hoc-bach-khoa', 'Gi·∫£ng ƒë∆∞·ªùng hi·ªán ƒë·∫°i t·∫°i ƒê·∫°i h·ªçc B√°ch Khoa TP.HCM', '268 L√Ω Th∆∞·ªùng Ki·ªát, Qu·∫≠n 10, TP.HCM', 'H·ªì Ch√≠ Minh', 'Vietnam', 1000, 'PGS. L√™ VƒÉn C', 'venue3@confab.local', '028-1111-2222', 'active')";
            
        $pdo->exec($venuesSql);
        $result['data']['venues'] = 3;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['venues']} venues";
    } else {
        $result['data']['venues'] = $existingVenues;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingVenues} venues trong h·ªá th·ªëng";
    }

    // 6. Speakers
    $result['messages'][] = '6. ƒêang th√™m speakers...';
    $existingSpeakers = $pdo->query("SELECT COUNT(*) FROM speakers")->fetchColumn();
    
    if ($existingSpeakers == 0) {
        $speakersSql = "INSERT INTO `speakers` (`user_id`, `name`, `slug`, `title`, `company`, `bio`, `email`, `status`) VALUES
            (3, 'Tr·∫ßn Di·ªÖn Gi·∫£', 'tran-dien-gia', 'CEO & Founder', 'TechViet Solutions', 'Chuy√™n gia c√¥ng ngh·ªá v·ªõi h∆°n 15 nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c ph√°t tri·ªÉn ph·∫ßn m·ªÅm v√† qu·∫£n l√Ω d·ª± √°n c√¥ng ngh·ªá.', 'speaker@confab.local', 'active'),
            (NULL, 'Dr. Nguy·ªÖn Khoa H·ªçc', 'dr-nguyen-khoa-hoc', 'Gi√°o s∆∞', 'ƒê·∫°i h·ªçc B√°ch Khoa', 'Ti·∫øn sƒ© v·ªÅ Tr√≠ tu·ªá nh√¢n t·∫°o v√† Machine Learning, t√°c gi·∫£ c·ªßa nhi·ªÅu nghi√™n c·ª©u ƒë∆∞·ª£c c√¥ng b·ªë qu·ªëc t·∫ø.', 'nguyenkhoahoc@example.com', 'active'),
            (NULL, 'Ph·∫°m Kinh Doanh', 'pham-kinh-doanh', 'Gi√°m ƒë·ªëc ƒëi·ªÅu h√†nh', 'Startup Hub Vietnam', 'Doanh nh√¢n th√†nh c√¥ng v·ªõi kinh nghi·ªám x√¢y d·ª±ng v√† ph√°t tri·ªÉn nhi·ªÅu startup c√¥ng ngh·ªá t·∫°i Vi·ªát Nam.', 'phamkinhdoanh@example.com', 'active')";
            
        $pdo->exec($speakersSql);
        $result['data']['speakers'] = 3;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['speakers']} speakers";
    } else {
        $result['data']['speakers'] = $existingSpeakers;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingSpeakers} speakers trong h·ªá th·ªëng";
    }

    // 7. Conferences
    $result['messages'][] = '7. ƒêang th√™m conferences...';
    $existingConferences = $pdo->query("SELECT COUNT(*) FROM conferences")->fetchColumn();
    
    if ($existingConferences == 0) {
        $conferencesSql = "INSERT INTO `conferences` (`title`, `slug`, `short_description`, `description`, `start_date`, `end_date`, `category_id`, `venue_id`, `location`, `type`, `format`, `price`, `currency`, `capacity`, `status`, `featured`, `created_by`) VALUES
            ('Vietnam Tech Summit 2024', 'vietnam-tech-summit-2024', 'H·ªôi ngh·ªã c√¥ng ngh·ªá l·ªõn nh·∫•t Vi·ªát Nam nƒÉm 2024', 'H·ªôi ngh·ªã t·∫≠p trung v√†o c√°c xu h∆∞·ªõng c√¥ng ngh·ªá m·ªõi nh∆∞ AI, Blockchain, IoT v√† Digital Transformation. S·ª± ki·ªán quy t·ª• h∆°n 1000 chuy√™n gia c√¥ng ngh·ªá h√†ng ƒë·∫ßu.', '2024-12-15 08:00:00', '2024-12-16 18:00:00', 1, 1, 'TP. H·ªì Ch√≠ Minh', 'in_person', 'conference', 2500000.00, 'VND', 1000, 'published', 1, 2),
            ('Startup Weekend Ho Chi Minh', 'startup-weekend-hcm', 'Cu·ªëi tu·∫ßn kh·ªüi nghi·ªáp d√†nh cho c√°c b·∫°n tr·∫ª c√≥ √Ω t∆∞·ªüng kinh doanh', 'S·ª± ki·ªán 54 gi·ªù li√™n t·ª•c gi√∫p c√°c b·∫°n tr·∫ª bi·∫øn √Ω t∆∞·ªüng th√†nh startup th·ª±c t·∫ø. C√≥ s·ª± tham gia c·ªßa c√°c mentor v√† nh√† ƒë·∫ßu t∆∞ h√†ng ƒë·∫ßu.', '2024-11-30 18:00:00', '2024-12-02 20:00:00', 2, 3, 'TP. H·ªì Ch√≠ Minh', 'in_person', 'workshop', 500000.00, 'VND', 200, 'published', 1, 2),
            ('Digital Health Conference 2024', 'digital-health-conference-2024', 'H·ªôi ngh·ªã v·ªÅ c√¥ng ngh·ªá s·ªë trong y t·∫ø', 'Kh√°m ph√° nh·ªØng ·ª©ng d·ª•ng c√¥ng ngh·ªá m·ªõi nh·∫•t trong lƒ©nh v·ª±c chƒÉm s√≥c s·ª©c kh·ªèe, t·ª´ telemedicine ƒë·∫øn AI trong ch·∫©n ƒëo√°n y khoa.', '2024-12-20 08:30:00', '2024-12-20 17:30:00', 3, 2, 'TP. H·ªì Ch√≠ Minh', 'hybrid', 'conference', 1500000.00, 'VND', 300, 'published', 0, 2)";
            
        $pdo->exec($conferencesSql);
        $result['data']['conferences'] = 3;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['conferences']} conferences";
    } else {
        $result['data']['conferences'] = $existingConferences;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingConferences} conferences trong h·ªá th·ªëng";
    }

    // 8. Conference Speakers
    $result['messages'][] = '8. ƒêang th√™m conference speakers...';
    $existingConferenceSpeakers = $pdo->query("SELECT COUNT(*) FROM conference_speakers")->fetchColumn();
    
    if ($existingConferenceSpeakers == 0) {
        $conferenceSpeakersSql = "INSERT INTO `conference_speakers` (`conference_id`, `speaker_id`, `role`, `talk_title`, `talk_description`, `status`) VALUES
            (1, 1, 'keynote', 'T∆∞∆°ng lai c·ªßa AI trong ph√°t tri·ªÉn ph·∫ßn m·ªÅm', 'Ph√¢n t√≠ch xu h∆∞·ªõng v√† t√°c ƒë·ªông c·ªßa tr√≠ tu·ªá nh√¢n t·∫°o ƒë·∫øn ng√†nh c√¥ng nghi·ªáp ph·∫ßn m·ªÅm trong 5 nƒÉm t·ªõi.', 'confirmed'),
            (1, 2, 'speaker', 'Machine Learning cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu', 'H∆∞·ªõng d·∫´n c∆° b·∫£n v·ªÅ Machine Learning v√† c√°c ·ª©ng d·ª•ng th·ª±c t·∫ø trong doanh nghi·ªáp.', 'confirmed'),
            (2, 3, 'keynote', 'X√¢y d·ª±ng startup c√¥ng ngh·ªá b·ªÅn v·ªØng', 'Chia s·∫ª kinh nghi·ªám v√† b√†i h·ªçc t·ª´ vi·ªác x√¢y d·ª±ng c√°c startup c√¥ng ngh·ªá th√†nh c√¥ng.', 'confirmed'),
            (3, 2, 'speaker', 'AI trong ch·∫©n ƒëo√°n y khoa', '·ª®ng d·ª•ng h·ªçc m√°y v√† th·ªã gi√°c m√°y t√≠nh trong vi·ªác ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã b·ªánh.', 'confirmed')";
            
        $pdo->exec($conferenceSpeakersSql);
        $result['data']['conference_speakers'] = 4;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['conference_speakers']} conference speakers";
    } else {
        $result['data']['conference_speakers'] = $existingConferenceSpeakers;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingConferenceSpeakers} conference speakers trong h·ªá th·ªëng";
    }

    // 9. Payment Methods
    $result['messages'][] = '9. ƒêang th√™m payment methods...';
    $existingPaymentMethods = $pdo->query("SELECT COUNT(*) FROM payment_methods")->fetchColumn();
    
    if ($existingPaymentMethods == 0) {
        $paymentMethodsSql = "INSERT INTO `payment_methods` (`name`, `type`, `provider`, `currency`, `is_active`, `sort_order`) VALUES
            ('Chuy·ªÉn kho·∫£n ng√¢n h√†ng', 'bank_transfer', 'manual', 'VND', 1, 1),
            ('V√≠ MoMo', 'e_wallet', 'momo', 'VND', 1, 2),
            ('ZaloPay', 'e_wallet', 'zalopay', 'VND', 1, 3),
            ('Th·∫ª t√≠n d·ª•ng/ghi n·ª£', 'credit_card', 'stripe', 'VND', 1, 4),
            ('PayPal', 'paypal', 'paypal', 'USD', 1, 5)";
            
        $pdo->exec($paymentMethodsSql);
        $result['data']['payment_methods'] = 5;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['payment_methods']} payment methods";
    } else {
        $result['data']['payment_methods'] = $existingPaymentMethods;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingPaymentMethods} payment methods trong h·ªá th·ªëng";
    }

    // 10. Media Folders
    $result['messages'][] = '10. ƒêang th√™m media folders...';
    $existingMediaFolders = $pdo->query("SELECT COUNT(*) FROM media_folders")->fetchColumn();
    
    if ($existingMediaFolders == 0) {
        $mediaFoldersSql = "INSERT INTO `media_folders` (`name`, `slug`, `description`, `parent_id`, `is_public`, `created_by`) VALUES
            ('Conferences', 'conferences', 'Th∆∞ m·ª•c ch·ª©a h√¨nh ·∫£nh v√† t√†i li·ªáu h·ªôi ngh·ªã', NULL, 1, 1),
            ('Speakers', 'speakers', 'Th∆∞ m·ª•c ch·ª©a ·∫£nh di·ªÖn gi·∫£', NULL, 1, 1),
            ('Venues', 'venues', 'Th∆∞ m·ª•c ch·ª©a ·∫£nh ƒë·ªãa ƒëi·ªÉm t·ªï ch·ª©c', NULL, 1, 1),
            ('Certificates', 'certificates', 'Th∆∞ m·ª•c ch·ª©a m·∫´u ch·ª©ng ch·ªâ', NULL, 0, 1),
            ('Documents', 'documents', 'Th∆∞ m·ª•c ch·ª©a t√†i li·ªáu v√† slide', 1, 1, 1)";
            
        $pdo->exec($mediaFoldersSql);
        $result['data']['media_folders'] = 5;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['media_folders']} media folders";
    } else {
        $result['data']['media_folders'] = $existingMediaFolders;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingMediaFolders} media folders trong h·ªá th·ªëng";
    }

    // 11. Scheduled Tasks
    $result['messages'][] = '11. ƒêang th√™m scheduled tasks...';
    $existingScheduledTasks = $pdo->query("SELECT COUNT(*) FROM scheduled_tasks")->fetchColumn();
    
    if ($existingScheduledTasks == 0) {
        $scheduledTasksSql = "INSERT INTO `scheduled_tasks` (`name`, `description`, `command`, `schedule`, `is_active`) VALUES
            ('G·ª≠i email nh·∫Øc nh·ªü', 'G·ª≠i email nh·∫Øc nh·ªü tr∆∞·ªõc h·ªôi ngh·ªã 24h', 'php /path/to/send_reminders.php', '0 9 * * *', 1),
            ('Backup database', 'Sao l∆∞u c∆° s·ªü d·ªØ li·ªáu h√†ng ng√†y', 'php /path/to/backup_db.php', '0 2 * * *', 1),
            ('L√†m s·∫°ch logs c≈©', 'X√≥a logs c≈© h∆°n 30 ng√†y', 'php /path/to/cleanup_logs.php', '0 3 * * 0', 1),
            ('C·∫≠p nh·∫≠t th·ªëng k√™', 'C·∫≠p nh·∫≠t b√°o c√°o th·ªëng k√™ h·ªá th·ªëng', 'php /path/to/update_stats.php', '0 1 * * *', 1)";
            
        $pdo->exec($scheduledTasksSql);
        $result['data']['scheduled_tasks'] = 4;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['scheduled_tasks']} scheduled tasks";
    } else {
        $result['data']['scheduled_tasks'] = $existingScheduledTasks;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingScheduledTasks} scheduled tasks trong h·ªá th·ªëng";
    }

    // 12. Settings
    $result['messages'][] = '12. ƒêang th√™m system settings...';
    $existingSettings = $pdo->query("SELECT COUNT(*) FROM settings")->fetchColumn();
    
    if ($existingSettings == 0) {
        $settingsSql = "INSERT INTO `settings` (`key`, `value`, `type`, `group`, `label`, `description`, `is_public`) VALUES
            ('site_name', 'Confab Web Oasis', 'string', 'general', 'T√™n website', 'T√™n hi·ªÉn th·ªã c·ªßa website', 1),
            ('site_description', 'H·ªá th·ªëng qu·∫£n l√Ω h·ªôi ngh·ªã chuy√™n nghi·ªáp', 'string', 'general', 'M√¥ t·∫£ website', 'M√¥ t·∫£ ng·∫Øn v·ªÅ website', 1),
            ('default_language', 'vi', 'string', 'localization', 'Ng√¥n ng·ªØ m·∫∑c ƒë·ªãnh', 'Ng√¥n ng·ªØ m·∫∑c ƒë·ªãnh c·ªßa h·ªá th·ªëng', 1),
            ('default_timezone', 'Asia/Ho_Chi_Minh', 'string', 'general', 'M√∫i gi·ªù m·∫∑c ƒë·ªãnh', 'M√∫i gi·ªù m·∫∑c ƒë·ªãnh c·ªßa h·ªá th·ªëng', 1),
            ('email_from_address', 'noreply@confab.local', 'string', 'email', 'Email g·ª≠i ƒëi', 'ƒê·ªãa ch·ªâ email m·∫∑c ƒë·ªãnh cho g·ª≠i th√¥ng b√°o', 0),
            ('email_from_name', 'Confab Web Oasis', 'string', 'email', 'T√™n ng∆∞·ªùi g·ª≠i', 'T√™n hi·ªÉn th·ªã khi g·ª≠i email', 0),
            ('registration_enabled', '1', 'boolean', 'conference', 'Cho ph√©p ƒëƒÉng k√Ω', 'B·∫≠t/t·∫Øt t√≠nh nƒÉng ƒëƒÉng k√Ω h·ªôi ngh·ªã', 1),
            ('certificate_enabled', '1', 'boolean', 'conference', 'B·∫≠t ch·ª©ng ch·ªâ', 'Cho ph√©p t·∫°o ch·ª©ng ch·ªâ tham d·ª±', 1),
            ('max_file_size', '10485760', 'integer', 'media', 'K√≠ch th∆∞·ªõc file t·ªëi ƒëa', 'K√≠ch th∆∞·ªõc file upload t·ªëi ƒëa (bytes)', 0),
            ('allowed_file_types', 'jpg,jpeg,png,gif,pdf,doc,docx,ppt,pptx', 'string', 'media', 'Lo·∫°i file cho ph√©p', 'Danh s√°ch extension file ƒë∆∞·ª£c ph√©p upload', 0)";
            
        $pdo->exec($settingsSql);
        $result['data']['settings'] = 10;
        $result['messages'][] = "‚úì ƒê√£ th√™m {$result['data']['settings']} system settings";
    } else {
        $result['data']['settings'] = $existingSettings;
        $result['messages'][] = "‚úì ƒê√£ c√≥ {$existingSettings} settings trong h·ªá th·ªëng";
    }

    // T√≠nh t·ªïng d·ªØ li·ªáu ƒë√£ import
    $totalImported = array_sum($result['data']);
    
    $result['success'] = true;
    $result['messages'][] = "üéâ Ho√†n th√†nh! ƒê√£ import t·ªïng c·ªông {$totalImported} b·∫£n ghi sample data";
    $result['messages'][] = "üìß T√†i kho·∫£n test: admin@confab.local / organizer@confab.local / speaker@confab.local / user@confab.local";
    $result['messages'][] = "üîë M·∫≠t kh·∫©u: password123";

} catch (Exception $e) {
    $result['success'] = false;
    $result['messages'][] = '‚ùå L·ªói khi import sample data: ' . $e->getMessage();
}

// Return JSON response
echo json_encode($result, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
?>
        ['name' => 'Y t·∫ø', 'slug' => 'y-te', 'description' => 'H·ªôi ngh·ªã y h·ªçc, s·ª©c kh·ªèe v√† nghi√™n c·ª©u y t·∫ø', 'color' => '#28a745', 'icon' => 'fas fa-heartbeat'],
        ['name' => 'Gi√°o d·ª•c', 'slug' => 'giao-duc', 'description' => 'C√°c s·ª± ki·ªán v·ªÅ gi√°o d·ª•c, ƒë√†o t·∫°o v√† ph√°t tri·ªÉn', 'color' => '#ffc107', 'icon' => 'fas fa-graduation-cap'],
        ['name' => 'Kinh doanh', 'slug' => 'kinh-doanh', 'description' => 'H·ªôi ngh·ªã kinh doanh, t√†i ch√≠nh v√† qu·∫£n l√Ω', 'color' => '#17a2b8', 'icon' => 'fas fa-chart-line'],
        ['name' => 'Marketing', 'slug' => 'marketing', 'description' => 'S·ª± ki·ªán v·ªÅ marketing, qu·∫£ng c√°o v√† truy·ªÅn th√¥ng', 'color' => '#e83e8c', 'icon' => 'fas fa-bullhorn'],
        ['name' => 'Khoa h·ªçc', 'slug' => 'khoa-hoc', 'description' => 'H·ªôi ngh·ªã khoa h·ªçc, nghi√™n c·ª©u v√† ph√°t tri·ªÉn', 'color' => '#6f42c1', 'icon' => 'fas fa-flask']
    ];

    $stmt = $pdo->prepare("
        INSERT INTO categories (name, slug, description, color, icon, status, is_featured, created_at)
        VALUES (?, ?, ?, ?, ?, 'active', ?, NOW())
        ON DUPLICATE KEY UPDATE 
            name = VALUES(name), 
            description = VALUES(description),
            color = VALUES(color),
            icon = VALUES(icon),
            updated_at = NOW()
    ");

    foreach ($categories as $index => $category) {
        $stmt->execute([
            $category['name'],
            $category['slug'],
            $category['description'],
            $category['color'],
            $category['icon'],
            ($index < 3) ? 1 : 0 // Featured cho 3 category ƒë·∫ßu
        ]);
        $categoriesCount++;
    }

    $result['messages'][] = "ƒê√£ th√™m {$categoriesCount} categories.";

    // 2. Th√™m venues
    $result['messages'][] = '2. ƒêang th√™m venues...';
    
    $venues = [
        [
            'name' => 'Trung t√¢m H·ªôi ngh·ªã Qu·ªëc gia',
            'slug' => 'trung-tam-hoi-nghi-quoc-gia',
            'description' => 'Trung t√¢m h·ªôi ngh·ªã hi·ªán ƒë·∫°i v·ªõi ƒë·∫ßy ƒë·ªß ti·ªán nghi',
            'address' => '8 L√™ Th√°nh T√¥ng, Ho√†n Ki·∫øm',
            'city' => 'H√† N·ªôi',
            'country' => 'Vietnam',
            'capacity' => 3000,
            'contact_name' => 'Nguy·ªÖn VƒÉn A',
            'contact_phone' => '+84 24 3936 2020',
            'contact_email' => 'info@ncc.gov.vn'
        ],
        [
            'name' => 'Saigon Convention Center',
            'slug' => 'saigon-convention-center',
            'description' => 'Trung t√¢m h·ªôi ngh·ªã l·ªõn nh·∫•t TP.HCM',
            'address' => '28C Nguy·ªÖn ƒê√¨nh Chi·ªÉu, Qu·∫≠n 3',
            'city' => 'TP. H·ªì Ch√≠ Minh',
            'country' => 'Vietnam',
            'capacity' => 2500,
            'contact_name' => 'Tr·∫ßn Th·ªã B',
            'contact_phone' => '+84 28 3930 9999',
            'contact_email' => 'contact@scc.com.vn'
        ],
        [
            'name' => 'Ariyana Convention Centre',
            'slug' => 'ariyana-convention-centre',
            'description' => 'Trung t√¢m h·ªôi ngh·ªã ven bi·ªÉn ƒê√† N·∫µng',
            'address' => 'Ariyana Beach Resort & Suites',
            'city' => 'ƒê√† N·∫µng',
            'country' => 'Vietnam',
            'capacity' => 1500,
            'contact_name' => 'L√™ VƒÉn C',
            'contact_phone' => '+84 236 3959 999',
            'contact_email' => 'events@ariyana.com'
        ]
    ];

    $stmt = $pdo->prepare("
        INSERT INTO venues (name, slug, description, address, city, country, capacity, 
                          contact_name, contact_phone, contact_email, status, created_at)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'active', NOW())
        ON DUPLICATE KEY UPDATE 
            name = VALUES(name),
            description = VALUES(description),
            updated_at = NOW()
    ");

    foreach ($venues as $venue) {
        $stmt->execute([
            $venue['name'],
            $venue['slug'],
            $venue['description'],
            $venue['address'],
            $venue['city'],
            $venue['country'],
            $venue['capacity'],
            $venue['contact_name'],
            $venue['contact_phone'],
            $venue['contact_email']
        ]);
        $venuesCount++;
    }

    $result['messages'][] = "ƒê√£ th√™m {$venuesCount} venues.";

    // 3. Th√™m users
    $result['messages'][] = '3. ƒêang th√™m users...';
    
    $users = [
        [
            'firstName' => 'Admin',
            'lastName' => 'System',
            'email' => 'admin@confab.local',
            'password' => password_hash('admin123', PASSWORD_DEFAULT),
            'role' => 'admin',
            'phone' => '0123456789',
            'status' => 'active',
            'email_verified' => 1
        ],
        [
            'firstName' => 'Nguy·ªÖn',
            'lastName' => 'VƒÉn Nam',
            'email' => 'nam.nguyen@email.com',
            'password' => password_hash('password123', PASSWORD_DEFAULT),
            'role' => 'user',
            'phone' => '0987654321',
            'status' => 'active',
            'email_verified' => 1,
            'company' => 'FPT Software',
            'position' => 'Senior Developer'
        ],
        [
            'firstName' => 'Tr·∫ßn',
            'lastName' => 'Minh Tu·∫•n',
            'email' => 'tuan.tran@email.com',
            'password' => password_hash('password123', PASSWORD_DEFAULT),
            'role' => 'organizer',
            'phone' => '0909123456',
            'status' => 'active',
            'email_verified' => 1,
            'company' => 'VnTech Media',
            'position' => 'Event Manager'
        ],
        [
            'firstName' => 'L√™',
            'lastName' => 'Th·ªã Hoa',
            'email' => 'hoa.le@email.com',
            'password' => password_hash('password123', PASSWORD_DEFAULT),
            'role' => 'speaker',
            'phone' => '0912345678',
            'status' => 'active',
            'email_verified' => 1,
            'company' => 'Viettel Group',
            'position' => 'AI Research Director'
        ]
    ];    // Check if status column exists
    $hasStatusColumn = false;
    try {
        $columnsQuery = $pdo->query("SHOW COLUMNS FROM users LIKE 'status'");
        $hasStatusColumn = $columnsQuery->rowCount() > 0;
    } catch (Exception $e) {
        $result['messages'][] = 'Kh√¥ng th·ªÉ ki·ªÉm tra c·ªôt status: ' . $e->getMessage();
    }

    // Prepare the query based on whether status column exists
    if ($hasStatusColumn) {
        $stmt = $pdo->prepare("
            INSERT INTO users (firstName, lastName, email, password, role, phone, status, email_verified, 
                            company, position, created_at)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())
            ON DUPLICATE KEY UPDATE 
                firstName = VALUES(firstName), 
                lastName = VALUES(lastName), 
                role = VALUES(role), 
                phone = VALUES(phone),
                company = VALUES(company),
                position = VALUES(position),
                updated_at = NOW()
        ");
    } else {        // Fallback query without status column
        $stmt = $pdo->prepare("
            INSERT INTO users (firstName, lastName, email, password, role, phone, email_verified, 
                            company, position, created_at)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())
            ON DUPLICATE KEY UPDATE 
                firstName = VALUES(firstName), 
                lastName = VALUES(lastName), 
                role = VALUES(role), 
                phone = VALUES(phone),
                company = VALUES(company),
                position = VALUES(position),
                updated_at = NOW()
        ");
    }    foreach ($users as $user) {
        try {
            if ($hasStatusColumn) {
                $stmt->execute([
                    $user['firstName'],
                    $user['lastName'],
                    $user['email'],
                    $user['password'],
                    $user['role'],
                    $user['phone'],
                    $user['status'],
                    $user['email_verified'],
                    $user['company'] ?? null,
                    $user['position'] ?? null
                ]);
            } else {
                // Execute without status field
                $stmt->execute([
                    $user['firstName'],
                    $user['lastName'],
                    $user['email'],
                    $user['password'],
                    $user['role'],
                    $user['phone'],
                    $user['email_verified'],
                    $user['company'] ?? null,
                    $user['position'] ?? null
                ]);
            }
            $usersCount++;
        } catch (PDOException $e) {
            $result['messages'][] = 'L·ªói khi th√™m user ' . $user['email'] . ': ' . $e->getMessage();
            // Continue with other users
            continue;
        }
    }

    $result['messages'][] = "ƒê√£ th√™m {$usersCount} users.";

    // 4. Th√™m speakers
    $result['messages'][] = '4. ƒêang th√™m speakers...';
    
    // L·∫•y user c√≥ role speaker
    $speakerUsers = $pdo->query("SELECT id, firstName, lastName, email, company, position FROM users WHERE role IN ('speaker', 'organizer')")->fetchAll(PDO::FETCH_ASSOC);
    
    $speakers = [
        [
            'name' => 'Nguy·ªÖn Th·ªã Minh',
            'slug' => 'nguyen-thi-minh',
            'title' => 'CEO, InnovateTech Vietnam',
            'company' => 'InnovateTech Vietnam',
            'bio' => 'Chuy√™n gia h√†ng ƒë·∫ßu v·ªÅ AI v√† h·ªçc m√°y v·ªõi h∆°n 15 nƒÉm kinh nghi·ªám trong ng√†nh c√¥ng ngh·ªá. B√† Minh ƒë√£ l√£nh ƒë·∫°o nhi·ªÅu d·ª± √°n AI th√†nh c√¥ng v√† l√† di·ªÖn gi·∫£ t·∫°i c√°c h·ªôi ngh·ªã qu·ªëc t·∫ø.',
            'short_bio' => 'CEO InnovateTech Vietnam, Chuy√™n gia AI h√†ng ƒë·∫ßu',
            'email' => 'minh.nguyen@innovatetech.vn',
            'specialties' => '["Artificial Intelligence", "Machine Learning", "Deep Learning", "Computer Vision"]',
            'languages' => '["Vietnamese", "English", "Japanese"]',
            'experience_years' => 15,
            'status' => 'active'
        ],
        [
            'name' => 'Tr·∫ßn ƒê·ª©c Kh·∫£i',
            'slug' => 'tran-duc-khai',
            'title' => 'CTO, VietStartup',
            'company' => 'VietStartup',
            'bio' => 'Ti√™n phong trong c√¥ng ngh·ªá blockchain t·∫°i Vi·ªát Nam. Anh Kh·∫£i c√≥ kinh nghi·ªám ph√°t tri·ªÉn c√°c ·ª©ng d·ª•ng blockchain cho ng√†nh t√†i ch√≠nh v√† l√† t√°c gi·∫£ c·ªßa nhi·ªÅu b√†i nghi√™n c·ª©u v·ªÅ cryptocurrency.',
            'short_bio' => 'CTO VietStartup, Chuy√™n gia Blockchain',
            'email' => 'khai.tran@vietstartup.com',
            'specialties' => '["Blockchain", "Cryptocurrency", "Smart Contracts", "DeFi"]',
            'languages' => '["Vietnamese", "English"]',
            'experience_years' => 12,
            'status' => 'active'
        ],
        [
            'name' => 'Ph·∫°m Th·ªã H∆∞∆°ng',
            'slug' => 'pham-thi-huong',
            'title' => 'Founder, GreenTech Solutions',
            'company' => 'GreenTech Solutions',
            'bio' => 'Chuy√™n gia v·ªÅ ph√°t tri·ªÉn b·ªÅn v·ªØng v√† nƒÉng l∆∞·ª£ng s·∫°ch. C√¥ H∆∞∆°ng ƒë√£ kh·ªüi nghi·ªáp th√†nh c√¥ng v·ªõi c√°c gi·∫£i ph√°p c√¥ng ngh·ªá xanh v√† ƒë∆∞·ª£c vinh danh l√† "Doanh nh√¢n tr·∫ª xu·∫•t s·∫Øc nƒÉm 2023".',
            'short_bio' => 'Founder GreenTech Solutions, Chuy√™n gia NƒÉng l∆∞·ª£ng s·∫°ch',
            'email' => 'huong.pham@greentech.vn',
            'specialties' => '["Green Technology", "Renewable Energy", "Sustainability", "Environmental Tech"]',
            'languages' => '["Vietnamese", "English", "French"]',
            'experience_years' => 8,
            'status' => 'active'
        ],
        [
            'name' => 'L√™ VƒÉn B√°ch',
            'slug' => 'le-van-bach',
            'title' => 'AI Research Director, FPT Software',
            'company' => 'FPT Software',
            'bio' => 'Ti·∫øn sƒ© AI v·ªõi h∆°n 15 nƒÉm kinh nghi·ªám nghi√™n c·ª©u v√† ·ª©ng d·ª•ng th·ª±c t·∫ø. √îng B√°ch ƒë√£ d·∫´n d·∫Øt nhi·ªÅu d·ª± √°n AI cho c√°c t·∫≠p ƒëo√†n l·ªõn v√† c√≥ h∆°n 50 b√†i b√°o khoa h·ªçc ƒë∆∞·ª£c c√¥ng b·ªë qu·ªëc t·∫ø.',
            'short_bio' => 'AI Research Director FPT Software, Ti·∫øn sƒ© AI',
            'email' => 'bach.le@fpt.com.vn',
            'specialties' => '["AI Research", "Data Science", "Natural Language Processing", "Computer Vision"]',
            'languages' => '["Vietnamese", "English", "Korean"]',
            'experience_years' => 15,
            'status' => 'active'
        ],
        [
            'name' => 'ƒêinh Thu Trang',
            'slug' => 'dinh-thu-trang',
            'title' => 'Cloud Architect, AWS Vietnam',
            'company' => 'AWS Vietnam',
            'bio' => 'Chuy√™n gia gi·∫£i ph√°p ƒë√°m m√¢y cho doanh nghi·ªáp l·ªõn v·ªõi ch·ª©ng ch·ªâ AWS Solutions Architect Professional. C√¥ Trang ƒë√£ t∆∞ v·∫•n chuy·ªÉn ƒë·ªïi s·ªë cho h√†ng trƒÉm doanh nghi·ªáp Vi·ªát Nam.',
            'short_bio' => 'Cloud Architect AWS Vietnam, Chuy√™n gia AWS',
            'email' => 'trang.dinh@aws.com',
            'specialties' => '["Cloud Computing", "AWS", "DevOps", "Microservices"]',
            'languages' => '["Vietnamese", "English"]',
            'experience_years' => 10,
            'status' => 'active'
        ]
    ];

    $stmt = $pdo->prepare("
        INSERT INTO speakers (user_id, name, slug, title, company, bio, short_bio, email, 
                            specialties, languages, experience_years, status, created_at)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())
        ON DUPLICATE KEY UPDATE 
            name = VALUES(name),
            title = VALUES(title),
            bio = VALUES(bio),
            updated_at = NOW()
    ");

    foreach ($speakers as $speaker) {
        // T√¨m user_id ph√π h·ª£p (c√≥ th·ªÉ null)
        $userId = null;
        foreach ($speakerUsers as $user) {
            if (strpos($speaker['email'], strtolower($user['firstName'])) !== false) {
                $userId = $user['id'];
                break;
            }
        }

        $stmt->execute([
            $userId,
            $speaker['name'],
            $speaker['slug'],
            $speaker['title'],
            $speaker['company'],
            $speaker['bio'],
            $speaker['short_bio'],
            $speaker['email'],
            $speaker['specialties'],
            $speaker['languages'],
            $speaker['experience_years'],
            $speaker['status']
        ]);
        $speakersCount++;
    }

    $result['messages'][] = "ƒê√£ th√™m {$speakersCount} speakers.";

    // 5. L·∫•y IDs ƒë·ªÉ t·∫°o conferences
    $categoryIds = $pdo->query("SELECT id, slug FROM categories ORDER BY id")->fetchAll(PDO::FETCH_KEY_PAIR);
    $venueIds = $pdo->query("SELECT id FROM venues ORDER BY id")->fetchAll(PDO::FETCH_COLUMN);
    $organizerIds = $pdo->query("SELECT id FROM users WHERE role IN ('organizer', 'admin')")->fetchAll(PDO::FETCH_COLUMN);

    // 6. Th√™m conferences
    $result['messages'][] = '5. ƒêang th√™m conferences...';
    
    $conferences = [
        [
            'title' => 'Vietnam Tech Summit 2025',
            'slug' => 'vietnam-tech-summit-2025',
            'short_description' => 'S·ª± ki·ªán c√¥ng ngh·ªá h√†ng ƒë·∫ßu Vi·ªát Nam 2025',
            'description' => 'S·ª± ki·ªán c√¥ng ngh·ªá h√†ng ƒë·∫ßu Vi·ªát Nam quy t·ª• c√°c c√¥ng ty kh·ªüi nghi·ªáp ti√™n phong, ra m·∫Øt c√¥ng ngh·ªá ƒë·ªôt ph√°, v√† k·∫øt n·ªëi c√°c chuy√™n gia trong ng√†nh. H·ªôi ngh·ªã s·∫Ω c√≥ c√°c phi√™n th·∫£o lu·∫≠n v·ªÅ AI, Blockchain, IoT v√† c√°c xu h∆∞·ªõng c√¥ng ngh·ªá m·ªõi nh·∫•t.',
            'start_date' => '2025-09-15 08:00:00',
            'end_date' => '2025-09-17 18:00:00',
            'category_slug' => 'cong-nghe',
            'venue_id' => 1,
            'location' => 'TP. H·ªì Ch√≠ Minh',
            'address' => '28C Nguy·ªÖn ƒê√¨nh Chi·ªÉu, Qu·∫≠n 3',
            'type' => 'hybrid',
            'format' => 'conference',
            'price' => 1999000,
            'currency' => 'VND',
            'early_bird_price' => 1599000,
            'early_bird_until' => '2025-08-15 23:59:59',
            'capacity' => 3000,
            'status' => 'published',
            'featured' => 1,
            'trending' => 1,
            'image' => 'https://images.unsplash.com/photo-1540575467063-178a50c2df87?w=800&h=400&fit=crop',
            'level' => 'intermediate',
            'tags' => '["AI", "Blockchain", "IoT", "Startup", "Innovation"]',
            'organizer_name' => 'VnTech Media',
            'organizer_email' => 'events@vntech.com.vn',
            'organizer_phone' => '+84 28 1234 5678',
            'organizer_company' => 'VnTech Media Group'
        ],
        [
            'title' => 'H·ªôi ngh·ªã Y t·∫ø Qu·ªëc t·∫ø 2025',
            'slug' => 'hoi-nghi-y-te-quoc-te-2025',
            'short_description' => 'H·ªôi ngh·ªã y t·∫ø qu·ªëc t·∫ø v·ªõi c√°c chuy√™n gia h√†ng ƒë·∫ßu',
            'description' => 'H·ªôi ngh·ªã y t·∫ø qu·ªëc t·∫ø mang ƒë·∫øn nh·ªØng chia s·∫ª v√† c·∫≠p nh·∫≠t m·ªõi nh·∫•t trong nghi√™n c·ª©u, ƒëi·ªÅu tr·ªã v√† c√¥ng ngh·ªá y t·∫ø to√†n c·∫ßu. S·ª± ki·ªán quy t·ª• c√°c b√°c sƒ©, nh√† nghi√™n c·ª©u v√† chuy√™n gia y t·∫ø t·ª´ kh·∫Øp n∆°i tr√™n th·∫ø gi·ªõi.',
            'start_date' => '2025-06-20 08:00:00',
            'end_date' => '2025-06-22 18:00:00',
            'category_slug' => 'y-te',
            'venue_id' => 0, // H√† N·ªôi
            'location' => 'H√† N·ªôi',
            'address' => '8 L√™ Th√°nh T√¥ng, Ho√†n Ki·∫øm',
            'type' => 'in_person',
            'format' => 'conference',
            'price' => 2500000,
            'currency' => 'VND',
            'capacity' => 1500,
            'status' => 'published',
            'featured' => 1,
            'image' => 'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&h=400&fit=crop',
            'level' => 'advanced',
            'tags' => '["Healthcare", "Medical Research", "Digital Health", "Telemedicine"]',
            'organizer_name' => 'Hi·ªáp h·ªôi Y khoa Vi·ªát Nam',
            'organizer_email' => 'contact@vmassoc.org.vn',
            'organizer_phone' => '+84 24 3762 5555',
            'organizer_company' => 'Vietnam Medical Association'
        ],
        [
            'title' => 'H·ªôi th·∫£o Marketing S·ªë 2025',
            'slug' => 'hoi-thao-marketing-so-2025',
            'short_description' => 'Kh√°m ph√° xu h∆∞·ªõng marketing s·ªë m·ªõi nh·∫•t',
            'description' => 'Kh√°m ph√° c√°c xu h∆∞·ªõng, chi·∫øn l∆∞·ª£c v√† c√¥ng c·ª• marketing s·ªë m·ªõi nh·∫•t ƒë·ªÉ th√∫c ƒë·∫©y doanh nghi·ªáp c·ªßa b·∫°n trong k·ª∑ nguy√™n s·ªë. H·ªôi th·∫£o bao g·ªìm c√°c case study th·ª±c t·∫ø v√† workshop hands-on.',
            'start_date' => '2025-07-10 08:30:00',
            'end_date' => '2025-07-11 17:30:00',
            'category_slug' => 'marketing',
            'venue_id' => 2, // ƒê√† N·∫µng
            'location' => 'ƒê√† N·∫µng',
            'address' => 'Ariyana Beach Resort & Suites',
            'type' => 'hybrid',
            'format' => 'workshop',
            'price' => 1500000,
            'currency' => 'VND',
            'early_bird_price' => 1200000,
            'early_bird_until' => '2025-06-10 23:59:59',
            'capacity' => 800,
            'status' => 'published',
            'featured' => 0,
            'trending' => 1,
            'image' => 'https://images.unsplash.com/photo-1557804506-669a67965ba0?w=800&h=400&fit=crop',
            'level' => 'beginner',
            'tags' => '["Digital Marketing", "SEO", "Social Media", "Content Marketing"]',
            'organizer_name' => 'Digital Marketing Association',
            'organizer_email' => 'info@dma.vn',
            'organizer_phone' => '+84 28 3915 3782',
            'organizer_company' => 'DMA Vietnam'
        ],
        [
            'title' => 'Di·ªÖn ƒë√†n Gi√°o d·ª•c Vi·ªát Nam 2025',
            'slug' => 'dien-dan-giao-duc-viet-nam-2025',
            'short_description' => 'Di·ªÖn ƒë√†n v·ªÅ ƒë·ªïi m·ªõi gi√°o d·ª•c v√† c√¥ng ngh·ªá',
            'description' => 'Di·ªÖn ƒë√†n th∆∞·ªùng ni√™n t·∫≠p trung v·ªÅ ƒë·ªïi m·ªõi gi√°o d·ª•c, ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y hi·ªán ƒë·∫°i v√† ·ª©ng d·ª•ng c√¥ng ngh·ªá trong gi√°o d·ª•c t·∫°i Vi·ªát Nam. S·ª± ki·ªán quy t·ª• c√°c nh√† gi√°o d·ª•c, qu·∫£n l√Ω v√† chuy√™n gia c√¥ng ngh·ªá gi√°o d·ª•c.',
            'start_date' => '2025-08-25 08:00:00',
            'end_date' => '2025-08-27 17:00:00',
            'category_slug' => 'giao-duc',
            'venue_id' => 0, // H√† N·ªôi
            'location' => 'H√† N·ªôi',
            'address' => '8 L√™ Th√°nh T√¥ng, Ho√†n Ki·∫øm',
            'type' => 'in_person',
            'format' => 'conference',
            'price' => 1200000,
            'currency' => 'VND',
            'capacity' => 1000,
            'status' => 'published',
            'featured' => 0,
            'image' => 'https://images.unsplash.com/photo-1503676260728-1c00da094a0b?w=800&h=400&fit=crop',
            'level' => 'all_levels',
            'tags' => '["Education", "EdTech", "E-learning", "Innovation"]',
            'organizer_name' => 'B·ªô Gi√°o d·ª•c v√† ƒê√†o t·∫°o',
            'organizer_email' => 'forum@moet.gov.vn',
            'organizer_phone' => '+84 24 3869 4585',
            'organizer_company' => 'Ministry of Education and Training'
        ]
    ];

    $stmt = $pdo->prepare("
        INSERT INTO conferences (
            title, slug, short_description, description, start_date, end_date, timezone,
            category_id, venue_id, location, address, type, format, price, currency,
            early_bird_price, early_bird_until, capacity, status, visibility, featured, trending,
            image, level, language, tags, organizer_name, organizer_email, organizer_phone, 
            organizer_company, created_by, published_at, created_at
        ) VALUES (
            ?, ?, ?, ?, ?, ?, 'Asia/Ho_Chi_Minh',
            ?, ?, ?, ?, ?, ?, ?, ?,
            ?, ?, ?, ?, 'public', ?, ?,
            ?, ?, 'vi', ?, ?, ?, ?, 
            ?, ?, NOW(), NOW()
        )
        ON DUPLICATE KEY UPDATE 
            title = VALUES(title),
            description = VALUES(description),
            updated_at = NOW()
    ");

    foreach ($conferences as $conf) {
        $categoryId = $categoryIds[$conf['category_slug']] ?? 1;
        $venueId = ($conf['venue_id'] < count($venueIds)) ? $venueIds[$conf['venue_id']] : null;
        $organizerId = $organizerIds[0] ?? 1;

        $stmt->execute([
            $conf['title'],
            $conf['slug'],
            $conf['short_description'],
            $conf['description'],
            $conf['start_date'],
            $conf['end_date'],
            $categoryId,
            $venueId,
            $conf['location'],
            $conf['address'],
            $conf['type'],
            $conf['format'],
            $conf['price'],
            $conf['currency'],
            $conf['early_bird_price'] ?? null,
            $conf['early_bird_until'] ?? null,
            $conf['capacity'],
            $conf['status'],
            $conf['featured'],
            $conf['trending'] ?? 0,
            $conf['image'],
            $conf['level'],
            $conf['tags'],
            $conf['organizer_name'],
            $conf['organizer_email'],
            $conf['organizer_phone'],
            $conf['organizer_company'],
            $organizerId
        ]);
        $conferencesCount++;
    }

    $result['messages'][] = "ƒê√£ th√™m {$conferencesCount} conferences.";

    // 7. Th√™m conference_speakers (li√™n k·∫øt speakers v·ªõi conferences)
    $result['messages'][] = '6. ƒêang th√™m conference speakers...';
    
    $conferenceIds = $pdo->query("SELECT id FROM conferences ORDER BY id")->fetchAll(PDO::FETCH_COLUMN);
    $speakerIds = $pdo->query("SELECT id FROM speakers ORDER BY id")->fetchAll(PDO::FETCH_COLUMN);

    $stmt = $pdo->prepare("
        INSERT INTO conference_speakers (conference_id, speaker_id, role, status, created_at)
        VALUES (?, ?, ?, 'confirmed', NOW())
        ON DUPLICATE KEY UPDATE role = VALUES(role)
    ");

    foreach ($conferenceIds as $confId) {
        // Th√™m 2-4 speakers cho m·ªói conference
        $numSpeakers = rand(2, 4);
        $selectedSpeakers = array_rand($speakerIds, $numSpeakers);
        if (!is_array($selectedSpeakers)) $selectedSpeakers = [$selectedSpeakers];

        foreach ($selectedSpeakers as $index => $speakerIndex) {
            $role = ($index === 0) ? 'keynote' : 'speaker';
            $stmt->execute([
                $confId,
                $speakerIds[$speakerIndex],
                $role
            ]);
            $conferenceSpeakersCount++;
        }
    }

    $result['messages'][] = "ƒê√£ th√™m {$conferenceSpeakersCount} conference speakers.";

    // 8. Th√™m registrations m·∫´u
    $result['messages'][] = '7. ƒêang th√™m registrations...';
    
    $userIds = $pdo->query("SELECT id FROM users WHERE role = 'user'")->fetchAll(PDO::FETCH_COLUMN);
    
    if (!empty($userIds) && !empty($conferenceIds)) {
        $stmt = $pdo->prepare("
            INSERT INTO registrations (user_id, conference_id, registration_code, ticket_type, 
                                     price_paid, currency, payment_status, status, created_at)
            VALUES (?, ?, ?, 'regular', ?, 'VND', 'paid', 'confirmed', NOW())
        ");

        foreach ($conferenceIds as $confId) {
            // ƒêƒÉng k√Ω m·ªôt s·ªë users cho m·ªói conference
            $numRegistrations = rand(1, min(3, count($userIds)));
            $selectedUsers = array_rand($userIds, $numRegistrations);
            if (!is_array($selectedUsers)) $selectedUsers = [$selectedUsers];

            foreach ($selectedUsers as $userIndex) {
                $registrationCode = 'REG' . $confId . str_pad($userIds[$userIndex], 3, '0', STR_PAD_LEFT);
                $stmt->execute([
                    $userIds[$userIndex],
                    $confId,
                    $registrationCode,
                    1999000 // Sample price
                ]);
                $registrationsCount++;
            }
        }
    }

    $result['messages'][] = "ƒê√£ th√™m {$registrationsCount} registrations.";

    // 9. Th√™m schedule sessions m·∫´u
    $result['messages'][] = '8. ƒêang th√™m schedule sessions...';
    
    $stmt = $pdo->prepare("
        INSERT INTO schedule_sessions (conference_id, title, description, session_date, 
                                     start_time, end_time, session_type, created_at)
        VALUES (?, ?, ?, ?, ?, ?, 'presentation', NOW())
    ");

    $sampleSessions = [
        ['title' => 'Khai m·∫°c v√† Keynote', 'description' => 'Ph√°t bi·ªÉu khai m·∫°c v√† b√†i ph√°t bi·ªÉu ch√≠nh', 'start' => '09:00', 'end' => '10:30'],
        ['title' => 'Panel Discussion', 'description' => 'Th·∫£o lu·∫≠n nh√≥m v·ªÅ ch·ªß ƒë·ªÅ ch√≠nh', 'start' => '11:00', 'end' => '12:30'],
        ['title' => 'Workshop', 'description' => 'Phi√™n th·ª±c h√†nh v√† workshop', 'start' => '14:00', 'end' => '15:30'],
        ['title' => 'Networking', 'description' => 'Th·ªùi gian giao l∆∞u v√† k·∫øt n·ªëi', 'start' => '16:00', 'end' => '17:00']
    ];

    foreach ($conferenceIds as $confId) {
        // L·∫•y ng√†y b·∫Øt ƒë·∫ßu c·ªßa conference
        $confDate = $pdo->query("SELECT DATE(start_date) as conf_date FROM conferences WHERE id = $confId")->fetchColumn();
        
        for ($i = 0; $i < 2; $i++) { // 2 sessions per conference
            $session = $sampleSessions[$i];
            $stmt->execute([
                $confId,
                $session['title'],
                $session['description'],
                $confDate,
                $session['start'],
                $session['end']
            ]);
            $scheduleSessionsCount++;
        }
    }

    $result['messages'][] = "ƒê√£ th√™m {$scheduleSessionsCount} schedule sessions.";

    // Update result data
    $result['data']['categories'] = $categoriesCount;
    $result['data']['venues'] = $venuesCount;
    $result['data']['users'] = $usersCount;
    $result['data']['speakers'] = $speakersCount;
    $result['data']['conferences'] = $conferencesCount;
    $result['data']['conference_speakers'] = $conferenceSpeakersCount;
    $result['data']['registrations'] = $registrationsCount;
    $result['data']['schedule_sessions'] = $scheduleSessionsCount;
    
    $result['messages'][] = 'Ho√†n t·∫•t! D·ªØ li·ªáu m·∫´u ƒë√£ ƒë∆∞·ª£c nh·∫≠p th√†nh c√¥ng v√†o schema m·ªõi!';
    $result['success'] = true;

} catch (Exception $e) {
    $result['messages'][] = 'L·ªói: ' . $e->getMessage();
    $result['success'] = false;
}

// Return JSON response
echo json_encode($result, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
?>